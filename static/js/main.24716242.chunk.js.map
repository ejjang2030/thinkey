{"version":3,"sources":["fbase.js","components/AuthForm.js","components/Auth.js","components/Thinkey.js","components/ThinkeyFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","REACT_MESSAGING_SENDER_ID","appId","measurementId","firebase","initializeApp","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPasswordd","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPasswordAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","marginLeft","faGithub","Thinkey","thinkeyObj","userObj","isOwner","editing","setEditing","text","newThinkey","setNewThinkey","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","autoFocus","marginTop","fontSize","displayName","src","width","height","faTrash","faPencilAlt","ThinkeyFactory","thinkey","setThinkey","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","collection","add","createdAt","Date","now","creatorId","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","Boolean","readAsDataURL","opacity","backgroundImage","faTimes","Home","thinkeys","setThinkeys","useEffect","orderBy","onSnapshot","snapshot","newArray","docs","map","document","data","Profile","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","faUser","AppRouter","isLoggedIn","maxWidth","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.24716242.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import { authService } from \"fbase\";\r\nimport { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPasswordd] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { name, value },\r\n        } = event;\r\n        if (name === \"email\") {\r\n            setEmail(value);\r\n        } else if (name === \"password\") {\r\n            setPasswordd(value);\r\n        }\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            let data;\r\n\r\n            if (newAccount) {\r\n                // create newAccount\r\n                data = await authService.createUserWithEmailAndPasswordAndPassword(\r\n                    email,\r\n                    password\r\n                );\r\n            } else {\r\n                // log in\r\n                data = await authService.signInWithEmailAndPassword(email, password);\r\n            }\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit} className=\"container\">\r\n                <input\r\n                    name=\"email\"\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    required\r\n                    value={email}\r\n                    onChange={onChange}\r\n                    className=\"authInput\"\r\n                />\r\n                <input\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    required\r\n                    value={password}\r\n                    onChange={onChange}\r\n                    className=\"authInput\"\r\n                />\r\n                <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} className=\"authInput authSubmit\"/>\r\n                {error && <span className=\"authError\">{error}</span>}\r\n            </form>\r\n            <span onClick={toggleAccount} className=\"authSwitch\">\r\n                {newAccount ? \"Sign In\" : \"Create Account\"}\r\n            </span>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AuthForm;","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faTwitter,\r\n    faGoogle,\r\n    faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport AuthForm from \"components/AuthForm\";\r\n\r\nconst Auth = () => {\r\n    const onSocialClick = async (event) => {\r\n        const {\r\n            target : { name },\r\n        } = event;\r\n        let provider;\r\n        if (name === \"google\") {\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if (name === \"github\") {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        const data = await authService.signInWithPopup(provider);\r\n    }\r\n\r\n    return (\r\n        <div className=\"authContainer\">\r\n            <FontAwesomeIcon\r\n                icon={faTwitter}\r\n                color={\"#04AAFF\"}\r\n                size=\"3x\"\r\n                style={{ marginBottom: 30 }}\r\n            />\r\n            <AuthForm/>\r\n            <div className=\"authBtns\">\r\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">Continue with Google<FontAwesomeIcon icon={faGoogle} style={{ marginLeft: 10, color: \"#ff0000\" }}/></button>\r\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">Continue with Github<FontAwesomeIcon icon={faGithub} style={{ marginLeft: 10, color: \"#000000\" }}/></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Auth;","import { dbService, storageService } from \"fbase\";\r\nimport { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Thinkey = ({ thinkeyObj, userObj, isOwner }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newThinkey, setNewThinkey] = useState(thinkeyObj.text);\r\n\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"삭제하시겠습니까?\");\r\n        if(ok) {\r\n            await dbService.doc(`thinkey/${thinkeyObj.id}`).delete();\r\n            if(thinkeyObj.attachmentUrl !== \"\") {\r\n                await storageService.refFromURL(thinkeyObj.attachmentUrl).delete();\r\n            }\r\n        }\r\n    };\r\n\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNewThinkey(value);\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`thinkey/${thinkeyObj.id}`).update({ text: newThinkey });\r\n        setEditing(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"thinkey\">\r\n            {editing ? (\r\n                <>\r\n                    <form onSubmit={onSubmit} className=\"container thinkeyEdit\">\r\n                        <input \r\n                            onChange={onChange} \r\n                            value={newThinkey} \r\n                            required\r\n                            placeholder=\"Edit your thinkey\"\r\n                            autoFocus\r\n                            className=\"formInput\"\r\n                        />\r\n                        <input type=\"submit\" value=\"Update Thinkey\" className=\"formBtn\"/>\r\n                    </form>\r\n                    <button onClick={toggleEditing} className=\"formBtn cancelBtn\">Cancel</button>\r\n                </>\r\n            ) : (\r\n                <div>\r\n                    <h4>{thinkeyObj.text}</h4>\r\n                    <h6 style={{ marginTop: 20, fontSize: 10 }}>{userObj.displayName}</h6>\r\n                    {thinkeyObj.attachmentUrl && (\r\n                        <img src={thinkeyObj.attachmentUrl} width=\"50px\" height=\"50px\"/>\r\n                    )}\r\n                    {isOwner && (\r\n                        <div className=\"thinkey__actions\">\r\n                            <span onClick={onDeleteClick}>\r\n                                <FontAwesomeIcon icon={faTrash}/>\r\n                            </span>\r\n                            <span onClick={toggleEditing}>\r\n                                <FontAwesomeIcon icon={faPencilAlt}/>\r\n                            </span>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Thinkey;","import { useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\"; \r\n\r\nconst ThinkeyFactory = ({ userObj }) => {\r\n    const [thinkey, setThinkey] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (thinkey === \"\") {\r\n            return;\r\n        }\r\n        let attachmentUrl = \"\";\r\n        if (attachment !== \"\") {\r\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        await dbService.collection(\"thinkey\").add({\r\n            text: thinkey,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl,\r\n        });\r\n        setThinkey(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        event.preventDefault();\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setThinkey(value);\r\n    };\r\n\r\n    const onFileChange = (event) => {\r\n        const {\r\n            target: { files },\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: { result },\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        }\r\n        if (Boolean(theFile)) {\r\n            reader.readAsDataURL(theFile);\r\n        }\r\n    };\r\n    \r\n    const onClearAttachment = () => setAttachment(\"\");\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit} className=\"factoryForm\">\r\n                <div className=\"factoryInput__container\">\r\n                    <input\r\n                        className=\"factoryInput__input\"\r\n                        value={thinkey}\r\n                        onChange={onChange}\r\n                        type=\"text\"\r\n                        placeholder=\"What's on your mind?\"\r\n                        maxLength={120}\r\n                    />\r\n                    <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\"/>\r\n                </div>\r\n                <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n                    <span>Add photos</span>\r\n                    <FontAwesomeIcon icon={faPlus}/>\r\n                </label>\r\n                <input\r\n                    id=\"attach-file\"\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    onChange={onFileChange}\r\n                    style={{\r\n                        opacity: 0,\r\n                    }}\r\n                />\r\n                {attachment && (\r\n                    <div className=\"factoryForm__attachment\">\r\n                        <img\r\n                            src={attachment}\r\n                            style={{\r\n                                backgroundImage: attachment,\r\n                            }}\r\n                        />\r\n                        <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                            <span>Remove</span>\r\n                            <FontAwesomeIcon icon={faTimes}/>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ThinkeyFactory;","import { dbService } from \"fbase\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Thinkey from \"components/Thinkey\";\r\nimport ThinkeyFactory from \"components/ThinkeyFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n    const [thinkeys, setThinkeys] = useState([]);\r\n\r\n    useEffect(() => {\r\n        dbService.collection(\"thinkey\")\r\n        .orderBy(\"createdAt\", \"desc\")\r\n        .onSnapshot((snapshot) => {\r\n            const newArray = snapshot.docs.map((document) => ({\r\n                id: document.id,\r\n                ...document.data(),\r\n            }));\r\n            setThinkeys(newArray);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <ThinkeyFactory userObj={userObj}/>\r\n            <div style={{ marginTop: 30 }}>\r\n                {thinkeys.map((thinkey) => (\r\n                    <Thinkey \r\n                        key={thinkey.id} \r\n                        thinkeyObj={thinkey}\r\n                        userObj={userObj}\r\n                        isOwner={thinkey.creatorId === userObj.uid}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","import { authService, dbService } from \"fbase\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    };\r\n    \r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({ displayName: newDisplayName });\r\n            refreshUser();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={onSubmit} className=\"profileForm\">\r\n                <input \r\n                    onChange={onChange}\r\n                    type=\"text\" \r\n                    placeholder=\"Display name\"\r\n                    value={newDisplayName}\r\n                    autoFocus\r\n                    className=\"formInput\"\r\n                />\r\n                <input \r\n                    type=\"submit\" \r\n                    value=\"Update Profile\"\r\n                    className=\"formBtn\"\r\n                    style={{\r\n                        marginTop: 10,\r\n                    }}\r\n                />\r\n            </form>\r\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n                Log Out\r\n            </span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => {\r\n    return (\r\n        <nav>\r\n            <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50}}>\r\n                <li>\r\n                    <Link to=\"/\" style={{ marginRight: 30 }}>\r\n                        <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\"/>\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/profile\" className=\"profileInfo\">\r\n                        <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\"/>\r\n                        <span style={{ marginTop: 10 }}>\r\n                            {userObj.displayName ? `${userObj.displayName}의 Profile` : \"Profile\"}\r\n                        </span>\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navigation;","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"components/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj}/>}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <div\r\n                        style={{\r\n                            maxWidth: 890,\r\n                            width: \"100%\",\r\n                            margin: \"0 auto\",\r\n                            marginTop: 80,\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                        }}\r\n                    >\r\n                        <Route exact path=\"/\">\r\n                            <Home userObj={userObj}/>\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile refreshUser={refreshUser} userObj={userObj}/>\r\n                        </Route>\r\n                    </div>\r\n                ) : (\r\n                    <Route exact path=\"/\">\r\n                        <Auth/>\r\n                    </Route>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;","import { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          uid: user.uid,\n          displayName: user.displayName,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(false);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      uid: user.uid,\n      displayName: user.displayName,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter \n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)} \n          userObj={userObj}/>)\n        : (\n          \"Initializing...\"\n        )}\n    </>\n  );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}