{"version":3,"sources":["fbase.js","components/AuthForm.js","components/Auth.js","components/Thinkey.js","components/ThinkeyFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","REACT_MESSAGING_SENDER_ID","appId","measurementId","firebase","initializeApp","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPasswordd","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPasswordAndPassword","signInWithEmailAndPassword","message","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Thinkey","thinkeyObj","isOwner","editing","setEditing","text","newThinkey","setNewThinkey","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","src","width","height","ThinkeyFactory","userObj","thinkey","setThinkey","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","collection","add","createdAt","Date","now","creatorId","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","Home","thinkeys","setThinkeys","useEffect","onSnapshot","snapshot","newArray","docs","map","document","data","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","to","AppRouter","isLoggedIn","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.255bff6c.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import { authService } from \"fbase\";\r\nimport { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPasswordd] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { name, value },\r\n        } = event;\r\n        if (name === \"email\") {\r\n            setEmail(value);\r\n        } else if (name === \"password\") {\r\n            setPasswordd(value);\r\n        }\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            let data;\r\n\r\n            if (newAccount) {\r\n                // create newAccount\r\n                data = await authService.createUserWithEmailAndPasswordAndPassword(\r\n                    email,\r\n                    password\r\n                );\r\n            } else {\r\n                // log in\r\n                data = await authService.signInWithEmailAndPassword(email, password);\r\n            }\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit}>\r\n                <input\r\n                    name=\"email\"\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    required\r\n                    value={email}\r\n                    onChange={onChange}\r\n                />\r\n                <input\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    required\r\n                    value={password}\r\n                    onChange={onChange}\r\n                />\r\n                <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"}/>\r\n                {error}\r\n            </form>\r\n            <span onClick={toggleAccount}>\r\n                {newAccount ? \"Sign In\" : \"Create Account\"}\r\n            </span>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AuthForm;","import { authService, firebaseInstance } from \"fbase\";\r\nimport AuthForm from \"components/AuthForm\";\r\n\r\nconst Auth = () => {\r\n    const onSocialClick = async (event) => {\r\n        const {\r\n            target : { name },\r\n        } = event;\r\n        let provider;\r\n        if (name === \"google\") {\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if (name === \"github\") {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        const data = await authService.signInWithPopup(provider);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <AuthForm/>\r\n            <div>\r\n                <button onClick={onSocialClick} name=\"google\">Continue with Google</button>\r\n                <button onClick={onSocialClick} name=\"github\">Continue with Github</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Auth;","import { dbService, storageService } from \"fbase\";\r\nimport { useState } from \"react\";\r\n\r\nconst Thinkey = ({ thinkeyObj, isOwner }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newThinkey, setNewThinkey] = useState(thinkeyObj.text);\r\n\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"삭제하시겠습니까?\");\r\n        if(ok) {\r\n            await dbService.doc(`thinkey/${thinkeyObj.id}`).delete();\r\n            if(thinkeyObj.attachmentUrl !== \"\") {\r\n                await storageService.refFromURL(thinkeyObj.attachmentUrl).delete();\r\n            }\r\n        }\r\n    };\r\n\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNewThinkey(value);\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`thinkey/${thinkeyObj.id}`).update({ text: newThinkey });\r\n        setEditing(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {editing ? (\r\n                <>\r\n                    <form onSubmit={onSubmit}>\r\n                        <input onChange={onChange} value={newThinkey} required/>\r\n                        <input type=\"submit\" value=\"Update Thinkey\"/>\r\n                    </form>\r\n                    <button onClick={toggleEditing}>Cancel</button>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <h4>{thinkeyObj.text}</h4>\r\n                    {thinkeyObj.attachmentUrl && (\r\n                        <img src={thinkeyObj.attachmentUrl} width=\"50px\" height=\"50px\"/>\r\n                    )}\r\n                    {isOwner && (\r\n                        <>\r\n                            <button onClick={onDeleteClick}>Delete Thinkey</button>\r\n                            <button onClick={toggleEditing}>Edit Thinkey</button>\r\n                        </>\r\n                    )}\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Thinkey;","import { useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst ThinkeyFactory = ({ userObj }) => {\r\n    const [thinkey, setThinkey] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if (attachment !== \"\") {\r\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        await dbService.collection(\"thinkey\").add({\r\n            text: thinkey,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl,\r\n        });\r\n        setThinkey(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        event.preventDefault();\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setThinkey(value);\r\n    };\r\n\r\n    const onFileChange = (event) => {\r\n        const {\r\n            target: { files },\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: { result },\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        }\r\n        reader.readAsDataURL(theFile);\r\n    };\r\n    \r\n    const onClearAttachment = () => setAttachment(\"\");\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit}>\r\n                <input\r\n                    value={thinkey}\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"What's on your mind?\"\r\n                    maxLength={120}\r\n                />\r\n                <input type=\"file\" accept=\"image/*\" onChange={onFileChange}/>\r\n                <input type=\"submit\" value=\"Thinkey\"/>\r\n                {attachment && (\r\n                    <div>\r\n                        <img src={attachment} width=\"50px\" height=\"50px\"/>\r\n                        <button onClick={onClearAttachment}>Clear</button>\r\n                    </div>\r\n                )}\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ThinkeyFactory;","import { dbService } from \"fbase\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Thinkey from \"components/Thinkey\";\r\nimport ThinkeyFactory from \"components/ThinkeyFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n    const [thinkeys, setThinkeys] = useState([]);\r\n\r\n    useEffect(() => {\r\n        dbService.collection(\"thinkey\").onSnapshot((snapshot) => {\r\n            const newArray = snapshot.docs.map((document) => ({\r\n                id: document.id,\r\n                ...document.data(),\r\n            }));\r\n            setThinkeys(newArray);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <ThinkeyFactory userObj={userObj}/>\r\n            <div>\r\n                {thinkeys.map((thinkey) => (\r\n                    <Thinkey \r\n                        key={thinkey.id} \r\n                        thinkeyObj={thinkey}\r\n                        isOwner={thinkey.creatorId === userObj.uid}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;","import { authService, dbService } from \"fbase\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    };\r\n    \r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({ displayName: newDisplayName });\r\n            refreshUser();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit}>\r\n                <input \r\n                    onChange={onChange}\r\n                    type=\"text\" \r\n                    placeholder=\"Display name\"\r\n                    value={newDisplayName}\r\n                />\r\n                <input type=\"submit\" value=\"Update Profile\"/>\r\n            </form>\r\n            <button onClick={onLogOutClick}>Log Out</button>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Profile;","import { Link } from \"react-router-dom\";\r\n\r\nconst Navigation = ({ userObj }) => {\r\n    return (\r\n        <nav>\r\n            <ul>\r\n                <li>\r\n                    <Link to=\"/\">Home</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/profile\">{userObj.displayName}의 My Profile</Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navigation;","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"components/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj}/>}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <>\r\n                        <Route exact path=\"/\">\r\n                            <Home userObj={userObj}/>\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile refreshUser={refreshUser} userObj={userObj}/>\r\n                        </Route>\r\n                    </>\r\n                ) : (\r\n                    <Route exact path=\"/\">\r\n                        <Auth/>\r\n                    </Route>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;","import { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          uid: user.uid,\n          displayName: user.displayName,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(false);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      uid: user.uid,\n      displayName: user.displayName,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter \n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)} \n          userObj={userObj}/>)\n        : (\n          \"Initializing...\"\n        )}\n    </>\n  );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}